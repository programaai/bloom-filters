{"version":3,"sources":["bloomfilter/types.ts","bloomfilter/BloomFilterInput.tsx","bloomfilter/BloomFilterSearch.tsx","styles.ts","bloomfilter/BloomFilterBlock.tsx","bloomfilter/BloomFilterView.tsx","Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BloomFilter","capacity","errorRate","items","_allItems","_bloomFilter","_errorRate","_capacity","this","Set","BF","create","forEach","i","add","item","has","size","Array","from","sort","_filter","BloomFilterInput","onAdd","useState","value","setValue","Card","CardContent","Typography","variant","component","gutterBottom","autoComplete","noValidate","onSubmit","event","preventDefault","stopPropagation","length","Box","display","justifyContent","flexGrow","marginRight","TextField","label","fullWidth","name","onChange","target","Button","color","type","disabled","endIcon","FastForward","BloomFilterSearch","filter","lastSearchValue","setLastSearchValue","result","setResult","newResult","Search","mt","useStyles","makeStyles","theme","bloomFilterBox","width","height","marginBottom","backgroundColor","palette","grey","transition","bloomFilterBoxOn","primary","light","secondary","createMuiTheme","BloomFilterBlock","classes","flexWrap","map","bit","idx","key","className","classNames","BloomFilterView","props","search","searchFilter","mb","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","ExpansionPanelDetails","List","dense","ListItem","ListItemText","CardActions","toFixed","Header","AppBar","position","Toolbar","IconButton","edge","Menu","initialState","reduce","word","window","App","bloomFilter","setFilter","searchValue","setSearchValue","ThemeProvider","CssBaseline","Container","fixed","Grid","container","spacing","xs","element","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc9bc798.chunk.js","sourcesContent":["import { BloomFilter as BF } from 'bloom-filters';\n\nexport type maybe = true;\nexport type bit = 0b0 | 0b1;\n\nexport class BloomFilter {\n  private _allItems: Set<string>\n  private _bloomFilter: BF<string>\n  private _errorRate: number\n  private _capacity: number\n\n  constructor(capacity: number, errorRate: number, items?: Set<string>) {\n    this._allItems = items ?? new Set()\n    this._errorRate = errorRate;\n\n    this._capacity = capacity\n    this._bloomFilter = BF.create(capacity, errorRate)\n    this._allItems.forEach(i => this._bloomFilter.add(i))\n  }\n\n  public get capacity(): number {\n    return this._capacity\n  }\n\n  public get size(): number {\n    return this._bloomFilter.size;\n  }\n\n  public get length(): number {\n    return this._allItems.size\n  }\n\n  public get errorRate(): number {\n    return this._errorRate;\n  }\n\n  public get items(): string[] {\n    return Array.from(this._allItems).sort();\n  }\n\n  public get filter(): bit[] {\n    return this._bloomFilter._filter;\n  }\n\n  public add(item: string): BloomFilter {\n    return new BloomFilter(this._capacity, this._errorRate, this._allItems.add(item))\n  }\n\n  public has(item: string): false | maybe {\n    return this._bloomFilter.has(item)\n  }\n}\n","import { Box, Button, Card, CardContent, TextField, Typography } from '@material-ui/core';\nimport React, { ChangeEvent, FormEvent, useState } from 'react';\n\nimport { FastForward } from '@material-ui/icons';\n\ninterface PropTypes {\n  onAdd: (element: string) => void;\n}\n\nexport default function BloomFilterInput({ onAdd }: PropTypes) {\n  const [value, setValue] = useState('');\n  const handleValueChanged = (event: ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  const handleFormSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (value && value.length) {\n      onAdd(value);\n      setValue('');\n    }\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          Adicionar elemento à coleção\n        </Typography>\n        <form autoComplete=\"off\" noValidate onSubmit={handleFormSubmit}>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Box flexGrow={1} marginRight=\"1em\">\n              <TextField\n                label=\"Novo elemento\"\n                fullWidth\n                name=\"elementField\"\n                value={value}\n                onChange={handleValueChanged}\n              />\n            </Box>\n            <Button\n              color=\"primary\"\n              type=\"submit\"\n              variant=\"contained\"\n              disabled={!value || value.length === 0}\n              endIcon={<FastForward />}\n            >\n              Adicionar\n            </Button>\n          </Box>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","import { Box, Button, Card, CardContent, TextField, Typography } from '@material-ui/core';\nimport React, { ChangeEvent, FormEvent, useState } from 'react';\n\nimport { BloomFilter } from './types';\nimport { Search } from '@material-ui/icons';\n\ninterface PropTypes {\n  filter: BloomFilter;\n  value: string;\n  onChange: (arg0: string) => any;\n}\n\nexport default function BloomFilterSearch({ filter, value: lastSearchValue, onChange: setLastSearchValue }: PropTypes) {\n  const [result, setResult] = useState<null | boolean>(null);\n  const [value, setValue] = useState('');\n\n  const handleValueChanged = (event: ChangeEvent<HTMLInputElement>) => {\n    if (value !== event.target.value) {\n      setValue(event.target.value);\n    }\n  };\n\n  const handleFormSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newResult = filter.has(value);\n    setResult(newResult);\n    setLastSearchValue(value);\n  };\n\n  const label = (() => {\n    switch (result) {\n      case null:\n        return '';\n      case true:\n        return (\n          <span>\n            <strong>talvez</strong> esteja no conjunto\n          </span>\n        );\n      case false:\n        return (\n          <span>\n            <strong>não está</strong> no conjunto\n          </span>\n        );\n    }\n  })();\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          Pesquisar\n        </Typography>\n        <form noValidate onSubmit={handleFormSubmit}>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Box flexGrow={1} marginRight=\"1em\">\n              <TextField label=\"Pesquisar\" fullWidth name=\"elementField\" value={value} onChange={handleValueChanged} />\n            </Box>\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\" endIcon={<Search />}>\n              Pesquisar\n            </Button>\n          </Box>\n        </form>\n        {label !== '' && (\n          <Box mt={2}>\n            <Typography variant=\"h6\" component=\"p\">\n              Resultado da busca:\n            </Typography>\n            <em>\"{lastSearchValue}\"</em> {label}\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import { createMuiTheme, makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  bloomFilterBox: {\n    width: '10px',\n    height: '10px',\n    marginRight: '2px',\n    marginBottom: '2px',\n    backgroundColor: theme.palette.grey['300'],\n    transition: \"background-color 200ms ease\"\n  },\n\n  bloomFilterBoxOn: {\n    '&.primary': {\n      backgroundColor: theme.palette.primary.light\n    },\n    '&.secondary': {\n      backgroundColor: theme.palette.secondary.light\n    }\n  }\n}));\n\nexport const theme = createMuiTheme();\n","import { theme, useStyles } from '../styles';\n\nimport { Box } from '@material-ui/core';\nimport React from 'react';\nimport { bit } from './types';\nimport classNames from 'classnames';\n\ninterface PropTypes {\n  filter: bit[];\n  variant?: 'primary' | 'secondary';\n}\n\nexport default function BloomFilterBlock({ filter, variant = 'primary' }: PropTypes) {\n  const classes = useStyles();\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\">\n      {filter.map((bit, idx) => (\n        <div\n          key={`${idx}:${bit}`}\n          className={classNames(classes.bloomFilterBox, variant, { [classes.bloomFilterBoxOn]: !!bit })}\n        >\n          &nbsp;\n        </div>\n      ))}\n    </Box>\n  );\n}\n","import {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\n\nimport { BloomFilter } from './types';\nimport BloomFilterBlock from './BloomFilterBlock';\nimport { ExpandMore as ExpandMoreIcon } from '@material-ui/icons';\nimport React from 'react';\n\ninterface PropTypes {\n  filter: BloomFilter;\n  search: string;\n}\n\nexport default function BloomFilterView(props: PropTypes) {\n  const { filter, search } = props;\n\n  let searchFilter = null;\n  if (search !== '') {\n    searchFilter = new BloomFilter(filter.capacity, filter.errorRate, new Set([search]));\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          Bloom filter\n        </Typography>\n        <Box mb={searchFilter === null ? 3 : 0}>\n          <BloomFilterBlock filter={filter.filter} />\n        </Box>\n        {searchFilter !== null && (\n          <Box mb={3}>\n            <BloomFilterBlock filter={searchFilter.filter} variant=\"secondary\" />\n            <Typography variant=\"caption\" component=\"span\" gutterBottom>\n              Hashes do valor pesquisado\n            </Typography>\n          </Box>\n        )}\n        <ExpansionPanel disabled={filter.items.length === 0}>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography variant=\"h6\" component=\"h4\">\n              Elementos da coleção:{' '}\n              <Typography variant=\"body2\" component=\"span\">\n                ({filter.items.length})\n              </Typography>\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <List dense>\n              {filter.items.map(item => (\n                <ListItem key={item}>\n                  <ListItemText primary={item} />\n                </ListItem>\n              ))}\n            </List>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CardContent>\n      <CardActions>\n        Capacidade: <strong>{filter.capacity}</strong>, Chance de falso positivo:{' '}\n        <strong>{(filter.errorRate * 100).toFixed(1)}%</strong>\n      </CardActions>\n    </Card>\n  );\n}\n","import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\n\nimport { Menu as MenuIcon } from '@material-ui/icons';\nimport React from 'react';\n\nexport default function Header() {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\">Bloom Filter Visualizer</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { Box, Container, CssBaseline, Grid, ThemeProvider } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nimport { BloomFilter } from './bloomfilter/types';\nimport BloomFilterInput from './bloomfilter/BloomFilterInput';\nimport BloomFilterSearch from './bloomfilter/BloomFilterSearch';\nimport BloomFilterView from './bloomfilter/BloomFilterView';\nimport Header from './Header';\nimport { theme } from './styles';\n\n// m = -n*Math.log(p) / Math.pow(Math.LN2, 2)\n// k = m/n * Math.LN2\n//\n// n = size of the set\n// p = error rate\n// m = the number of bits for the filter\n// k = the number of hash functions\n\n// function getBitArraySize(n: number, p: number): number {\n//   return (-n * Math.log(p)) / Math.pow(Math.LN2, 2);\n// }\n\n// function getHashFunctionCount(m: number, n: number): number {\n//   return (m / n) * Math.LN2;\n// }\n\n// const n = 10;\n// const p = 0.2;\n// const m = getBitArraySize(n, p);\n// const k = getHashFunctionCount(m, n);\n\nconst initialState = (() => {\n  const words = ['python', 'javascript', 'c#', 'swift', 'rust', 'kotlin'];\n\n  return words.reduce((filter, word) => filter.add(word), new BloomFilter(10, 0.1));\n})();\n\n(window as any).theme = theme;\n\nconst App: React.FC = () => {\n  const [bloomFilter, setFilter] = useState(initialState);\n  const [searchValue, setSearchValue] = useState('');\n\n  const addElement = (element: string) => {\n    setFilter(bloomFilter.add(element));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Box mt={3}>\n        <Container fixed>\n          <Grid container spacing={3}>\n            <Grid item xs={4}>\n              <BloomFilterInput onAdd={addElement} />\n              <Box mt={3}>\n                <BloomFilterSearch filter={bloomFilter} value={searchValue} onChange={setSearchValue} />\n              </Box>\n            </Grid>\n            <Grid item xs={8}>\n              <BloomFilterView filter={bloomFilter} search={searchValue} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}